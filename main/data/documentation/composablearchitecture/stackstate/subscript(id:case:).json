{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"text":" ","kind":"text"},{"text":"id","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"case","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP","text":"CasePathable"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using stack-based navigation (see "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference"},{"text":") you will typically have a","type":"text"},{"text":" ","type":"text"},{"text":"single enum that represents all of the destinations that can be pushed onto the stack, and you","type":"text"},{"type":"text","text":" "},{"text":"will hold that state in ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"text":":","type":"text"}]},{"type":"codeListing","code":["struct State {","  var path = StackState<Path.State>()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this subscript for a succinct syntax to modify the data in a particular case of"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Path.State","type":"codeVoice"},{"type":"text","text":" enum, like so:"}]},{"syntax":"swift","code":["state.path[id: 0, case: \\.edit]?.alert = AlertState {","  Text(\"Delete?\")","}"],"type":"codeListing"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Accessing the wrong case will result in a runtime warning and test failure.","type":"text"}]}],"name":"Important"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/subscript(id:case:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackstate\/subscript(id:case:)"]}],"metadata":{"title":"subscript(id:case:)","symbolKind":"subscript","roleHeading":"Instance Subscript","externalID":"s:22ComposableArchitecture10StackStateV2id4caseqd__SgAA0C9ElementIDV_s7KeyPathCy9CasePaths0K0VyxGAMyqd__GGtcAK0K8PathableRzluip","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"case"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"abstract":[{"type":"text","text":"Accesses the value associated with the given id and case for reading and writing."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"kind":"symbol","navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"role":"symbol","abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"StackElementID","url":"\/documentation\/composablearchitecture\/stackelementid","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"kind":"symbol","title":"StackState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","url":"\/documentation\/composablearchitecture\/stackstate","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","type":"topic","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"kind":"article","title":"Stack-based navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/subscript(id:case:)":{"fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Case","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Case"},{"text":"?","kind":"text"}],"url":"\/documentation\/composablearchitecture\/stackstate\/subscript(id:case:)","abstract":[{"type":"text","text":"Accesses the value associated with the given id and case for reading and writing."}],"kind":"symbol","title":"subscript(id:case:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/subscript(id:case:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"}}}
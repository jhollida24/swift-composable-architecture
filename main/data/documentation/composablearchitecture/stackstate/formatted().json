{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.formatted()"},{"text":".","type":"text"}],"metadata":{"roleHeading":"Instance Method","externalID":"s:ST10FoundationSS7ElementRtzrlE9formattedSSyF::SYNTHESIZED::s:22ComposableArchitecture10StackStateV","symbolKind":"method","platforms":[{"deprecated":false,"introducedAt":"15.0","beta":false,"unavailable":false,"name":"iOS"},{"name":"macOS","introducedAt":"12.0","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"15.0","beta":false,"name":"tvOS","deprecated":false,"unavailable":false},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"8.0","name":"watchOS"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"extendedModule":"Swift","title":"formatted()","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackstate\/formatted()"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/formatted()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Sequence-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Sequence-Implementations"]]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/formatted()":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackstate\/formatted()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/formatted()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","title":"formatted()","abstract":[],"type":"topic","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/Sequence-Implementations":{"abstract":[],"type":"topic","title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackstate\/sequence-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Sequence-Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"kind":"symbol","title":"StackState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","url":"\/documentation\/composablearchitecture\/stackstate","role":"symbol"}}}
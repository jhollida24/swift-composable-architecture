{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"},"metadata":{"roleHeading":"Operator","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier","text":"ObservableStateID"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier","text":"ObservableStateID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"s:22ComposableArchitecture17ObservableStateIDV2eeoiySbAC_ACtFZ","title":"==(_:_:)","role":"symbol"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Equatable.==(_:_:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ObservableStateID","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"type":"topic","title":"ObservableStateID","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid","navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/==(_:_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","text":"ObservableStateID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)","title":"==(_:_:)","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"title":"ObservableState()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"title":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","kind":"symbol","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}]}}}
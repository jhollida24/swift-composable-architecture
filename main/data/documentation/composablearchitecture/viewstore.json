{"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9ViewStoreC","symbolKind":"class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"title":"ViewStore","roleHeading":"Class","platforms":[]},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","interfaceLanguage":"swift"},"topicSections":[{"title":"Creating a view store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf"],"anchor":"Creating-a-view-store"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk"],"anchor":"Accessing-state","title":"Accessing state"},{"title":"Sending actions","anchor":"Sending-actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"]},{"title":"SwiftUI integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh"],"anchor":"SwiftUI-integration"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"@dynamicMemberLookup","kind":"attribute"},{"kind":"text","text":" "},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"In SwiftUI applications, a "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is accessed most commonly using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"text":" ","type":"text"},{"type":"text","text":"view. It can be initialized with a store and a closure that is handed a view store and returns a"},{"text":" ","type":"text"},{"type":"text","text":"view:"}],"type":"paragraph"},{"code":["var body: some View {","  WithViewStore(self.store, observe: { $0 }) { viewStore in","    VStack {","      Text(\"Current count: \\(viewStore.count)\")","      Button(\"Increment\") { viewStore.send(.incrementButtonTapped) }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"View stores can also be observed directly by views, scenes, commands, and other contexts that","type":"text"},{"type":"text","text":" "},{"text":"support the ","type":"text"},{"code":"@ObservedObject","type":"codeVoice"},{"type":"text","text":" property wrapper:"}],"type":"paragraph"},{"code":["@ObservedObject var viewStore: ViewStore<State, Action>"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"text":"If you experience compile-time issues with views that use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference"},{"type":"text","text":", try"},{"type":"text","text":" "},{"text":"observing the view store directly using the ","type":"text"},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":" property wrapper, instead, which"},{"type":"text","text":" "},{"type":"text","text":"is easier on the compiler."}],"type":"paragraph"}],"name":"Tip","style":"tip","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In UIKit applications a "},{"code":"ViewStore","type":"codeVoice"},{"text":" can be created from a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"text":" and then subscribed to for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state updates:"}]},{"code":["let store: Store<State, Action>","let viewStore: ViewStore<State, Action>","private var cancellables: Set<AnyCancellable> = []","","init(store: Store<State, Action>) {","  self.store = store","  self.viewStore = ViewStore(store, observe: { $0 })","}","","func viewDidLoad() {","  super.viewDidLoad()","","  self.viewStore.publisher.count","    .sink { [weak self] in self?.countLabel.text = $0 }","    .store(in: &self.cancellables)","}","","@objc func incrementButtonTapped() {","  self.viewStore.send(.incrementButtonTapped)","}"],"type":"codeListing","syntax":"swift"},{"name":"Important","style":"important","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ViewStore"},{"text":" class is not thread-safe, and all interactions with it (and the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"store it was derived from) must happen on the same thread. Further, for SwiftUI applications,"},{"text":" ","type":"text"},{"type":"text","text":"all interactions must happen on the "},{"inlineContent":[{"type":"text","text":"main"}],"type":"emphasis"},{"text":" thread. See the documentation of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"class for more information as to why this decision was made."}],"type":"paragraph"}],"type":"aside"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-kwxk":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk","title":"subscript(dynamicMember:)","role":"symbol","abstract":[{"type":"text","text":"Returns the resulting value of a given key path."}],"url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-kwxk","type":"topic","kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9v9l0":{"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" into an observable ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" in order","type":"text"},{"type":"text","text":" "},{"text":"to compute bindings from state.","type":"text"}],"kind":"symbol","role":"symbol","title":"init(_:observe:send:removeDuplicates:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9v9l0","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9mg12":{"kind":"symbol","type":"topic","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9mg12","role":"symbol","title":"init(_:observe:send:removeDuplicates:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/state":{"url":"\/documentation\/composablearchitecture\/viewstore\/state","abstract":[{"type":"text","text":"The current state."}],"role":"symbol","title":"state","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"text":"ViewState","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-4f9j5":{"kind":"symbol","type":"topic","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-4f9j5","role":"symbol","title":"init(_:observe:removeDuplicates:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"yield(while:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","role":"symbol","abstract":[{"type":"text","text":"Suspends the current task while a predicate on state is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"url":"\/documentation\/composablearchitecture\/bindings","kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","title":"Working with SwiftUI bindings","abstract":[{"type":"text","text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStoreOf":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A convenience type alias for referring to a view store of a given reducer’s domain."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStoreOf"}],"url":"\/documentation\/composablearchitecture\/viewstoreof","role":"symbol","title":"ViewStoreOf","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf","navigatorTitle":[{"kind":"identifier","text":"ViewStoreOf"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-3ak1y":{"kind":"symbol","type":"topic","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-3ak1y","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"title":"init(_:observe:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:while:)":{"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:while:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","role":"symbol","abstract":[{"type":"text","text":"Sends an action into the store and then suspends while a piece of state is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Animation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?, "},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"deprecated":true,"title":"send(_:animation:while:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-96hm5":{"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-96hm5","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","role":"symbol","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into an observable ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"text":"to compute bindings from state.","type":"text"}],"type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ViewState"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init(_:observe:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:)":{"kind":"symbol","title":"send(_:animation:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:)","abstract":[{"text":"Sends an action to the store with a given animation.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"deprecated":true,"abstract":[{"type":"text","text":"Sends an action into the store and then suspends while a piece of state is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"send(_:while:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/7Combine16ObservableObjectP":{"identifier":"doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP","type":"unresolvable","title":"Combine.ObservableObject"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","title":"Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"kind":"symbol","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binding"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"title":"binding(get:send:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-1m32f":{"kind":"symbol","type":"topic","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-1m32f","role":"symbol","conformance":{"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(_:observe:send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-4hzhi":{"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-4hzhi","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","role":"symbol","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"text":" into an observable ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"type":"text","text":" in order"},{"text":" ","type":"text"},{"text":"to compute bindings from state.","type":"text"}],"type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"init(_:observe:send:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/objectWillChange":{"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"objectWillChange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine25ObservableObjectPublisherC","kind":"typeIdentifier","text":"ObservableObjectPublisher"}],"url":"\/documentation\/composablearchitecture\/viewstore\/objectwillchange","abstract":[],"role":"symbol","kind":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","title":"objectWillChange"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:transaction:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:transaction:)","type":"topic","kind":"symbol","abstract":[{"text":"Sends an action to the store with a given transaction.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV","text":"Transaction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"title":"send(_:transaction:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-81c6d":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-81c6d","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" into an observable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" in order"},{"type":"text","text":" "},{"text":"to compute bindings from state.","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":">) -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"title":"init(_:observe:removeDuplicates:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","role":"symbol","abstract":[{"text":"Sends an action to the store.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"deprecated":true,"title":"send(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-3q4xh":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh","url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-3q4xh","type":"topic","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture24_SendableWritableKeyPatha","text":"_SendableWritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"subscript(dynamicMember:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ViewAction.State"},{"text":" and ","type":"text"},{"code":"ViewAction","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BindableAction","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"title":"WithViewStore","url":"\/documentation\/composablearchitecture\/withviewstore","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"type":"topic","title":"ViewStore","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"kind":"symbol","deprecated":true}}}
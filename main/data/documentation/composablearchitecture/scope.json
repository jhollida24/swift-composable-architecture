{"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Structure","symbolKind":"struct","title":"Scope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"externalID":"s:22ComposableArchitecture5ScopeV","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"role":"symbol","modules":[{"name":"ComposableArchitecture"}]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]}],"topicSections":[{"anchor":"Struct-state","title":"Struct state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx"]},{"anchor":"Enum-state","title":"Enum state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-9g44g"]},{"anchor":"Deprecations","title":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"seeAlsoSections":[{"anchor":"Embedding-child-features","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],"generated":true,"title":"Embedding child features"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"text":"ParentAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Child","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Child","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","text":"Reducer"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" allows you to transform a parent domain into a child domain, and then run a child"},{"type":"text","text":" "},{"type":"text","text":"reduce on that subset domain. This is an important tool for breaking down large features into"},{"type":"text","text":" "},{"text":"smaller units and then piecing them together. The smaller units can be easier to understand and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"test, and can even be packaged into their own isolated modules."}],"type":"paragraph"},{"inlineContent":[{"text":"You hand ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"text":" 3 pieces of data for it to do its job:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"A writable key path that identifies the child state inside the parent state."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A case path that identifies the child actions inside the parent actions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A @"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"text":" closure that describes the reducer you want to run on the child domain.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"When run, it will intercept all child actions sent and feed them to the child reducer so that"},{"text":" ","type":"text"},{"type":"text","text":"it can update the parent state and execute effects."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, given the basic scaffolding of child reducer:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Child {","  struct State {","    \/\/ ...","  }","  enum Action {","    \/\/ ...","  }","  \/\/ ...","}"]},{"inlineContent":[{"text":"A parent reducer with a domain that holds onto the child domain can use","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx"},{"type":"text","text":" to embed the child reducer in its"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Parent {","  struct State {","    var child: Child.State","    \/\/ ...","  }","","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.child, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional parent logic and behavior","    }","  }","}"]},{"level":2,"text":"Enum state","type":"heading","anchor":"Enum-state"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" reducer also works when state is modeled as an enum, not just a struct. In that"},{"text":" ","type":"text"},{"type":"text","text":"case you can use "},{"type":"codeVoice","code":"init(state:action:child:fileID:filePath:line:column:)"},{"type":"text","text":" to specify a case"},{"type":"text","text":" "},{"text":"path that identifies the case of state you want to scope to.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, if your state was modeled as an enum for unloaded\/loading\/loaded, you could","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"scope to the loaded case to run a reduce on only that case:"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Feature {","  enum State {","    case unloaded","    case loading","    case loaded(Child.State)","  }","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.loaded, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional feature logic and behavior","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that the order of combine "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference"},{"text":" and your additional feature logic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"matters. It must be combined before the additional logic. In the other order it would be"},{"text":" ","type":"text"},{"type":"text","text":"possible for the feature to intercept a child action, switch the state to another case, and"},{"text":" ","type":"text"},{"type":"text","text":"then the scoped child reducer would not be able to react to that action. That can cause subtle"},{"type":"text","text":" "},{"text":"bugs, and so we show a runtime warning in that case, and cause test failures.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For an alternative to using "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"text":" with state case paths that enforces the order, check out","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ifCaseLet(_:action:then:fileID:line:)-7zcm0"},{"type":"text","text":" operator."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ScopeDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations","kind":"article","type":"topic","abstract":[{"text":"Review unsupported reducer APIs and their replacements.","type":"text"}],"title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/scopedeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/reduce(into:action:)":{"kind":"symbol","abstract":[],"title":"reduce(into:action:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":") -> "},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/scope\/reduce(into:action:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"role":"symbol","title":"ReducerBuilder","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"text":"other, and merging their effects.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d":{"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","url":"\/documentation\/composablearchitecture\/reducer\/ifcaselet(_:action:then:fileid:filepath:line:column:)-7sg8d","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on a case of parent enum state."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifCaseLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"CaseState"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"_IfCaseLetReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"WrappedState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"WrappedAction"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"WrappedState"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"WrappedAction"},{"kind":"text","text":">, "},{"text":"then","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"role":"symbol","title":"ifLet(_:action:then:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:filepath:line:column:)-2r2pn","type":"topic","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:)-88vdx":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Child"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"text":" ","type":"text"},{"type":"text","text":"actions."}],"title":"init(state:action:child:)","role":"symbol","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:)-88vdx"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","defaultImplementations":2,"required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","role":"symbol","type":"topic","title":"body"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","abstract":[],"title":"Reducer Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"role":"symbol","title":"Scope","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","url":"\/documentation\/composablearchitecture\/scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:filePath:line:column:)-9g44g":{"kind":"symbol","title":"init(state:action:child:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-9g44g","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-9g44g","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"type":"text","text":" "},{"type":"text","text":"actions."}]}}}
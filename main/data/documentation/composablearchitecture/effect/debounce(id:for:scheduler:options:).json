{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debounce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"dueTime"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"text":"scheduler","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","kind":"typeIdentifier"},{"text":"? = nil) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Combine9SchedulerP","kind":"typeIdentifier","text":"Scheduler"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The effect’s identifier."}],"type":"paragraph"}],"name":"id"},{"name":"dueTime","content":[{"inlineContent":[{"type":"text","text":"The duration you want to debounce for."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The scheduler you want to deliver the debounced output to.","type":"text"}]}],"name":"scheduler"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Scheduler options that customize the effect’s delivery of elements.","type":"text"}]}],"name":"options"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An effect that publishes events only after a specified time elapses."}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"To turn an effect into a debounce-able one you must provide an identifier, which is used to"},{"text":" ","type":"text"},{"type":"text","text":"determine which in-flight effect should be canceled in order to start a new effect. Any"},{"type":"text","text":" "},{"text":"hashable value can be used for the identifier, such as a string, but you can add a bit of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"protection against typos by defining a new type that conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", such as an enum:"}],"type":"paragraph"},{"code":["case let .textChanged(text):","  enum CancelID { case search }","","  return .run { send in","    await send(","      .searchResponse(","        TaskResult { await self.apiClient.search(text) }","      )","    )","  }","  .debounce(id: CancelID.search, for: 0.5, scheduler: self.mainQueue)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"seeAlsoSections":[{"title":"Combine integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)"],"anchor":"Combine-integration","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)"]}],"metadata":{"role":"symbol","title":"debounce(id:for:scheduler:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debounce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa","kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sx6StrideQa","text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","text":"SchedulerOptions"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture6EffectV8debounce2id3for9scheduler7optionsACyxGqd_0__17SchedulerTimeType_6StrideQYd__qd__0I7OptionsQyd__Sgt7Combine0I0Rd__SHRd_0_s8SendableRd_0_r0_lF","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Turns an effect into one that can be debounced."}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/publisher(_:)":{"abstract":[{"text":"Creates an effect from a Combine publisher.","type":"text"}],"url":"\/documentation\/composablearchitecture\/effect\/publisher(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":"(() -> some "},{"preciseIdentifier":"s:7Combine9PublisherP","kind":"typeIdentifier","text":"Publisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"publisher(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/throttle(id:for:scheduler:latest:)":{"abstract":[{"type":"text","text":"Throttles an effect so that it only publishes one output per given interval."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throttle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"title":"throttle(id:for:scheduler:latest:)","role":"symbol","url":"\/documentation\/composablearchitecture\/effect\/throttle(id:for:scheduler:latest:)","conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/debounce(id:for:scheduler:options:)":{"abstract":[{"text":"Turns an effect into one that can be debounced.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debounce"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"debounce(id:for:scheduler:options:)","role":"symbol","url":"\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]}}}
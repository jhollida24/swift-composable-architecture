{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CustomReflectable.customMirror"},{"type":"text","text":"."}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"customMirror","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6MirrorV","text":"Mirror","kind":"typeIdentifier"}],"role":"symbol","title":"customMirror","externalID":"s:22ComposableArchitecture16BindingViewStateV12customMirrors0G0Vvp","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Property","symbolKind":"property","extendedModule":"ComposableArchitecture"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"customMirror","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6MirrorV","text":"Mirror","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/customMirror","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingviewstate\/custommirror"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"url":"\/documentation\/composablearchitecture\/bindingviewstate","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","role":"symbol","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewState"}],"title":"BindingViewState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/customMirror":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/customMirror","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"customMirror","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Mirror","kind":"typeIdentifier","preciseIdentifier":"s:s6MirrorV"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/custommirror","abstract":[],"title":"customMirror"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"}}}
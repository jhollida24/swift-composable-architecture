{"abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference","isActive":true},{"type":"text","text":"s."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"symbolKind":"macro","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture10ViewAction3foryxm_tcAA7ReducerRzAaB0D0Rpzlufm","title":"ViewAction(for:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"roleHeading":"Macro"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewaction(for:)"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"],"title":"View actions","anchor":"View-actions"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17ViewActionSendingP","kind":"typeIdentifier","text":"ViewActionSending","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"},{"text":") ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":".Type) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10ViewActionP","text":"ViewAction","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"If you want to restrict what actions can be sent from the view you can use this macro along with the"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"text":" protocol. You start by conforming your reducer’s ","type":"text"},{"code":"Action","type":"codeVoice"},{"type":"text","text":" enum to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":" protocol, and moving view-specific actions to its own inner enum:"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct Feature {","  struct State { \/* ... *\/ }","  enum Action: ViewAction {","    case loginResponse(Bool)","    case view(View)","","    enum View {","      case loginButtonTapped","    }","  }","  \/\/ ...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can apply the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","isActive":true},{"type":"text","text":" macro to your view by specifying the type of the"},{"type":"text","text":" "},{"type":"text","text":"reducer that powers the view:"}]},{"type":"codeListing","syntax":"swift","code":["@ViewAction(for: Feature.self)","struct FeatureView: View {","  let store: StoreOf<Feature>","  \/\/ ...","}"]},{"inlineContent":[{"type":"text","text":"The macro does two things:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It adds a "},{"code":"send","type":"codeVoice"},{"type":"text","text":" method to the view that you can use instead of "},{"type":"codeVoice","code":"store.send"},{"text":". This allows you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to send view actions more simply, without wrapping the action in "},{"code":".view(…)","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":[" Button(\"Login\") {","-  store.send(.view(.loginButtonTapped))","+  send(.loginButtonTapped)"," }"],"type":"codeListing","syntax":"diff"}]},{"content":[{"inlineContent":[{"text":"It creates warning diagnostics if you try sending actions through ","type":"text"},{"code":"store.send","type":"codeVoice"},{"type":"text","text":" rather than"},{"text":" ","type":"text"},{"type":"text","text":"using the "},{"code":"send","type":"codeVoice"},{"type":"text","text":" method on the view:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Button(\"Login\") {","  store.send(.view(.loginButtonTapped))","\/\/┬─────────","\/\/╰─ ⚠️ Do not use 'store.send' directly when using '@ViewAction'","}"]}]}]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","title":"Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"kind":"symbol","title":"Action","url":"\/documentation\/composablearchitecture\/reducer\/action","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" that can communicate with the outside world."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"title":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","kind":"symbol","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewActionSending":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewActionSending"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","type":"topic","abstract":[{"type":"text","text":"A type that represents a view with a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" that can send ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":"s."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ViewActionSending","kind":"identifier"}],"role":"symbol","title":"ViewActionSending","url":"\/documentation\/composablearchitecture\/viewactionsending"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction":{"kind":"symbol","navigatorTitle":[{"text":"ViewAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"topic","abstract":[{"type":"text","text":"Defines the actions that can be sent from a view."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"}],"role":"symbol","title":"ViewAction","url":"\/documentation\/composablearchitecture\/viewaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction(for:)":{"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"text":".Type)","kind":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","title":"ViewAction(for:)","url":"\/documentation\/composablearchitecture\/viewaction(for:)","abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true,"type":"reference"},{"text":"s.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]}}}
{"sections":[],"kind":"article","metadata":{"role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"ComposableArchitecture"}],"title":"Equatable Implementations"},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Operators","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/!=(_:_:)"],"anchor":"Operators"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/identifiedaction\/equatable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/Equatable-Implementations","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction/!=(_:_:)":{"abstract":[],"kind":"symbol","title":"!=(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction\/!=(_:_:)","type":"topic","url":"\/documentation\/composablearchitecture\/identifiedaction\/!=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"url":"\/documentation\/composablearchitecture\/identifiedaction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}],"role":"symbol","title":"IdentifiedAction","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"}}}
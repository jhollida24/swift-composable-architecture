{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"chartSymbolScale(_:)","role":"symbol","externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScaleyQrs13KeyValuePairsVyqd__AD05ChartF5Shape_pGAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","extendedModule":"SwiftUICore","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DataValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","platforms":[{"introducedAt":"16.0","deprecated":false,"name":"iOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"macOS","beta":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"16.0"},{"deprecated":false,"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"9.0"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartSymbolScale(_:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"kind":"text","text":"<"},{"text":"DataValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mapping","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyValuePairs","preciseIdentifier":"s:s13KeyValuePairsV"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"DataValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Plottable","preciseIdentifier":"s:6Charts9PlottableP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5"]}],"sections":[],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolScale(_:)-8jdo5":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DataValue"},{"text":", any ","kind":"text"},{"text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","role":"symbol","abstract":[],"kind":"symbol","title":"chartSymbolScale(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","deprecated":true,"kind":"symbol","title":"IfLetStore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article"}}}
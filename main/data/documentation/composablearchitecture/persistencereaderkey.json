{"seeAlsoSections":[{"anchor":"Read-only-persistence","title":"Read-only persistence","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencereaderkey"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceReaderKey"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Conform to this protocol to express loading state from an external system, and subscribing to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state changes in the external system. It is only necessary to conform to this protocol if the"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","isActive":true},{"type":"text","text":", or "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","isActive":true},{"type":"text","text":" strategies are not sufficient for your"},{"type":"text","text":" "},{"text":"use case.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the article "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","isActive":true,"type":"reference"},{"type":"text","text":" for more information, in particular the"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"protocol","roleHeading":"Protocol","title":"PersistenceReaderKey","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceReaderKey","kind":"identifier"}],"navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"externalID":"s:22ComposableArchitecture20PersistenceReaderKeyP"},"kind":"symbol","topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value"],"generated":true,"title":"Associated Types"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/id-gq1c"],"generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-2cfq9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-5ub","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-6k27r","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-9j150","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-m54v","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decode:encode:)"],"anchor":"Type-Methods"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"kind":"relationships","type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"]},{"type":"conformingTypes","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],"title":"Conforming Types","kind":"relationships"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value","kind":"symbol","required":true,"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"abstract":[{"text":"A type that can be loaded or subscribed to in an external system.","type":"text"}],"title":"Value"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-9j150":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-9j150","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-9j150","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to an optional string user default,"},{"type":"text","text":" "},{"type":"text","text":"transforming that to a "},{"code":"RawRepresentable","type":"codeVoice"},{"text":" data type.","type":"text"}],"title":"appStorage(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharedReader":{"title":"SharedReader","abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SharedReader"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader","url":"\/documentation\/composablearchitecture\/sharedreader","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SharedReader","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/ID-swift.associatedtype":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/ID-swift.associatedtype","title":"ID","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-swift.associatedtype","required":true,"abstract":[{"type":"text","text":"A type representing the hashable identity of a persistence key."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"title":"PersistenceReaderKey","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/subscribe(initialValue:didSet:)-hab7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/subscribe(initialValue:didSet:)-hab7","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"subscribe","kind":"identifier"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"didSet","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":"?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV","text":"Shared","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC","text":"Subscription"}],"required":true,"role":"symbol","defaultImplementations":1,"title":"subscribe(initialValue:didSet:)","type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/subscribe(initialvalue:didset:)-hab7","abstract":[{"text":"Subscribes to external updates.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-2cfq9":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-2cfq9","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to an optional integer user default,"},{"text":" ","type":"text"},{"type":"text","text":"transforming that to a "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" data type."}],"title":"appStorage(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-2cfq9"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"kind":"symbol","navigatorTitle":[{"text":"PersistenceKeyDefault","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencekeydefault","title":"PersistenceKeyDefault","abstract":[{"text":"A persistence key that provides a default value to an existing persistence key.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKeyDefault"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PersistenceKey"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-5ub":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appStorage"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha","kind":"typeIdentifier","text":"_SendableReferenceWritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol","title":"appStorage(_:)","abstract":[{"text":"Creates a persistence key for sharing data in user defaults given a key path.","type":"text"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-5ub","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-5ub"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/id-gq1c":{"kind":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa","kind":"typeIdentifier","text":"ID"}],"type":"topic","role":"symbol","defaultImplementations":1,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/id-gq1c","title":"id","abstract":[{"text":"The hashable identity of a persistence key.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/id-gq1c"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/load(initialValue:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"kind":"text","text":"?) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/load(initialvalue:)","role":"symbol","title":"load(initialValue:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/load(initialValue:)","required":true,"abstract":[{"text":"Loads the freshest value from storage. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there is no value in storage."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","title":"AppStorageKeyPathKey","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Escapable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-m54v":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"appStorage","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-m54v","role":"symbol","title":"appStorage(_:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-m54v","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a string user default, transforming"},{"text":" ","type":"text"},{"text":"that to a ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":" data type.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","kind":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"title":"FileStorageKey","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","url":"\/documentation\/composablearchitecture\/filestoragekey","kind":"symbol","abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileStorageKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","url":"\/documentation\/composablearchitecture\/persistencekey","navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}],"title":"PersistenceKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decode:encode:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decode:encode:)","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to a value in the file system."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decode:encode:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fileStorage","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"text":", ","kind":"text"},{"text":"decode","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"encode","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","title":"fileStorage(_:decode:encode:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"navigatorTitle":[{"text":"AppStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKey","kind":"identifier"}],"title":"AppStorageKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekey","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Escapable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/inmemorykey","title":"InMemoryKey","abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","navigatorTitle":[{"text":"InMemoryKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/appStorage(_:)-6k27r":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/appStorage(_:)-6k27r","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/appstorage(_:)-6k27r","title":"appStorage(_:)","abstract":[{"type":"text","text":"Creates a persistence key that can read and write to an integer user default, transforming"},{"type":"text","text":" "},{"type":"text","text":"that to a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" data type.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"abstract":[],"kind":"section","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","title":"Custom persistence","type":"topic"}}}
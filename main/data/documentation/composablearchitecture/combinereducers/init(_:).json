{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/init(_:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"init","role":"symbol","externalID":"s:22ComposableArchitecture15CombineReducersVyACyxq_q0_Gq0_yXEcfc","modules":[{"name":"ComposableArchitecture"}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(() -> ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"]]},"abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"attribute","text":"@"},{"kind":"attribute","text":"ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"},{"kind":"text","text":" "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Reducers"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A reducer builder.","type":"text"}]}],"name":"build"}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/init(_:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","role":"symbol","type":"topic","title":"init(_:)","url":"\/documentation\/composablearchitecture\/combinereducers\/init(_:)","abstract":[{"text":"Initializes a reducer that combines all of the reducers in the given build block.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Reducers"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"abstract":[{"type":"text","text":"Combines multiple reducers into a single reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","url":"\/documentation\/composablearchitecture\/combinereducers","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"title":"CombineReducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"role":"symbol","title":"ReducerBuilder","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"text":"other, and merging their effects.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"}}}
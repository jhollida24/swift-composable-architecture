{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id"],"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)"],"anchor":"Instance-Methods","generated":true},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKeyDefault"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Base"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Base","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","text":"PersistenceReaderKey","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this persistence key when constructing type-safe keys (see"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","isActive":true},{"type":"text","text":" for more info) to provide a default that is used instead of"},{"type":"text","text":" "},{"text":"providing one at the call site of using ","type":"text"},{"isActive":true,"overridingTitle":"@Shared","type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}]},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if an "},{"type":"codeVoice","code":"isOn"},{"text":" value is backed by user defaults and it should default to ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" when"},{"type":"text","text":" "},{"text":"there is no value in user defaults, then you can define a persistence key like so:","type":"text"}],"type":"paragraph"},{"code":["extension PersistenceReaderKey where Self == PersistenceKeyDefault<AppStorageKey<Bool>> {","  static var isOn: Self {","    PersistenceKeyDefault(.appStorage(\"isOn\"), false)","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then use it like so:"}]},{"code":["struct State {","  @Shared(.isOn) var isOn","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"title":"PersistenceKeyDefault","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PersistenceKeyDefault","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture21PersistenceKeyDefaultV","roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"role":"symbol"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/persistencekeydefault"]}],"abstract":[{"text":"A persistence key that provides a default value to an existing persistence key.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceKey-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","title":"PersistenceKey Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencekey-implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceReaderKey-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"PersistenceReaderKey Implementations","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencereaderkey-implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/subscribe(initialValue:didSet:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"didSet"},{"kind":"text","text":": ("},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV","kind":"typeIdentifier","text":"Shared"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Subscription","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)","title":"subscribe(initialValue:didSet:)","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/subscribe(initialvalue:didset:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/load(initialValue:)":{"title":"load(initialValue:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)","role":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/load(initialvalue:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","title":"PersistenceReaderKey","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PersistenceKey","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/persistencereaderkey","abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","kind":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"role":"collectionGroup"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","title":"Swift.Copyable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"type":"topic","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"kind":"symbol","title":"Shared","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"title":"PersistenceKeyDefault","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","url":"\/documentation\/composablearchitecture\/persistencekeydefault","abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"kind":"symbol","navigatorTitle":[{"text":"PersistenceKeyDefault","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKeyDefault"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/id":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa","text":"ID"}],"type":"topic","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/id","title":"id","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/init(_:_:)":{"title":"init(_:_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)","role":"symbol","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/init(_:_:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKey"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","title":"PersistenceKey","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"PersistenceKey","type":"codeVoice"},{"type":"text","text":"."}]},"navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/persistencekey","abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","title":"Type-safe keys","kind":"section","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys"}}}
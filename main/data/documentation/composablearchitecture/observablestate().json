{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"]]},"kind":"symbol","metadata":{"symbolKind":"macro","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture15ObservableStateyycfm","title":"ObservableState()","roleHeading":"Macro"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"],"anchor":"Conformance","title":"Conformance"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"],"anchor":"Change-tracking","title":"Change tracking"},{"title":"Supporting macros","anchor":"Supporting-macros","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:11Observation10ObservableP"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","kind":"typeIdentifier","text":"ObservableState"},{"text":") ","kind":"text"},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(_$id), named(_$observationRegistrar), named(_$willModify)) "},{"text":"@attached","kind":"attribute"},{"text":"(memberAttribute) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observablestate()"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"kind":"symbol","type":"topic","title":"ObservationStateRegistrar","role":"symbol","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"title":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/state","kind":"symbol","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"role":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/observablestate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"}],"navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","title":"ObservableState","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"title":"ObservableState()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"abstract":[],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservationStateIgnored"},{"kind":"text","text":"()"}],"type":"topic","role":"symbol","kind":"symbol","title":"ObservationStateIgnored()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","url":"\/documentation\/composablearchitecture\/observationstateignored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"type":"topic","title":"ObservableStateID","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid","navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"kind":"symbol","title":"ObservationStateTracked()","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ObservationStateTracked","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/observationstatetracked()","type":"topic"}}}
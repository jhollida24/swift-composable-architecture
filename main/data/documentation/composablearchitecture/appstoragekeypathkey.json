{"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"code":"PersistenceReaderKey\/appStorage(_:)-5jsie","type":"codeVoice"},{"type":"text","text":" to create values of this type."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"]]},"sections":[],"abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/appstoragekeypathkey"]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"externalID":"s:22ComposableArchitecture017AppStorageKeyPathE0V","title":"AppStorageKeyPathKey","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/init(_:)"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceKey-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceReaderKey-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"references":{"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/Equatable-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/Equatable-Implementations","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/equatable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PersistenceReaderKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"title":"PersistenceReaderKey","abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}]},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/init(_:)":{"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/init(_:)","kind":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha","text":"_SendableReferenceWritableKeyPath"},{"text":"<","kind":"text"},{"text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"role":"symbol","title":"init(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/init(_:)","type":"topic"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/PersistenceKey-Implementations":{"title":"PersistenceKey Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceKey-Implementations","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/persistencekey-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"title":"AppStorageKeyPathKey","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"type":"topic","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/PersistenceReaderKey-Implementations":{"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/persistencereaderkey-implementations","role":"collectionGroup","kind":"article","type":"topic","abstract":[],"title":"PersistenceReaderKey Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceReaderKey-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKey"}],"kind":"symbol","title":"AppStorageKey","abstract":[{"text":"A type defining a user defaults persistence strategy.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"url":"\/documentation\/composablearchitecture\/appstoragekey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","kind":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"url":"\/documentation\/composablearchitecture\/persistencekey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"title":"PersistenceKey","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceKey","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"role":"symbol"}}}
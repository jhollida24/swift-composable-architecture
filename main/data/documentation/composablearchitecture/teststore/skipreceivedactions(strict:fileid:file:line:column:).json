{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"skipReceivedActions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strict","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filePath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#column","kind":"keyword"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"true"},{"type":"text","text":" and there are no in-flight actions to cancel, a test failure"},{"type":"text","text":" "},{"text":"will be reported.","type":"text"}]}],"name":"strict"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Can be handy if you are writing an exhaustive test for a particular part of your feature, but","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you donâ€™t want to explicitly deal with all of the received actions:"}],"type":"paragraph"},{"syntax":"swift","code":["let store = TestStore(\/* ... *\/)","","await store.send(.buttonTapped) {","  \/\/ Assert on how state changed","}","await store.receive(\\.response) {","  \/\/ Assert on how state changed","}","","\/\/ Make it explicit you do not want to assert on any other received actions.","await store.skipReceivedActions()"],"type":"codeListing"}]}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"title":"skipReceivedActions(strict:fileID:file:line:column:)","extendedModule":"ComposableArchitecture","role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture9TestStoreC19skipReceivedActions6strict6fileID0I04line6columnySb_s12StaticStringVAKS2utYaF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"skipReceivedActions","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"strict"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/skipreceivedactions(strict:fileid:file:line:column:)"]}],"abstract":[{"text":"Clears the queue of received actions from effects.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipReceivedActions(strict:fileID:file:line:column:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"anchor":"Skipping-actions-and-effects","generated":true,"title":"Skipping actions and effects","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipInFlightEffects(strict:fileID:file:line:column:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/skipInFlightEffects(strict:fileID:file:line:column:)":{"url":"\/documentation\/composablearchitecture\/teststore\/skipinflighteffects(strict:fileid:file:line:column:)","title":"skipInFlightEffects(strict:fileID:file:line:column:)","role":"symbol","abstract":[{"type":"text","text":"Cancels any currently in-flight effects."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipInFlightEffects(strict:fileID:file:line:column:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"skipInFlightEffects","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strict","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/skipReceivedActions(strict:fileID:file:line:column:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/skipReceivedActions(strict:fileID:file:line:column:)","role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/skipreceivedactions(strict:fileid:file:line:column:)","title":"skipReceivedActions(strict:fileID:file:line:column:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"skipReceivedActions"},{"text":"(","kind":"text"},{"text":"strict","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"abstract":[{"text":"Clears the queue of received actions from effects.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"title":"TestStore","url":"\/documentation\/composablearchitecture\/teststore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic"}}}
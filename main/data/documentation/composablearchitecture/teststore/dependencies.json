{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Configuring-exhaustivity","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"],"title":"Configuring exhaustivity"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependencies define the execution context that your feature runs in. They can be modified"},{"type":"text","text":" "},{"text":"throughout the test store’s lifecycle in order to influence how your feature produces effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically you will override certain dependencies immediately after constructing the test"},{"type":"text","text":" "},{"type":"text","text":"store. For example, if your feature need access to the current date and an API client to do"},{"text":" ","type":"text"},{"text":"its job, you can override those dependencies like so:","type":"text"}]},{"code":["let store = TestStore(\/* ... *\/) {","  $0.apiClient = .mock","  $0.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","}","","\/\/ Store assertions here"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"You can also override dependencies in the middle of the test in order to simulate how the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dependency changes as the user performs action. For example, to test the flow of an API"},{"text":" ","type":"text"},{"type":"text","text":"request failing at first but then later succeeding, you can do the following:"}],"type":"paragraph"},{"code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.failure) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.success) { \/* ... *\/ }"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp","symbolKind":"property","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencies"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"}],"title":"dependencies","role":"symbol"},"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor"],"title":"Configuring a test store","anchor":"Configuring-a-test-store","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-61in2":{"role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-61in2","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2","type":"topic","title":"withDependencies(_:operation:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withDependencies"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"url":"\/documentation\/composablearchitecture\/teststore\/dependencies","type":"topic","abstract":[{"type":"text","text":"The current dependencies of the test store."}],"kind":"symbol","title":"dependencies","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"title":"TestStore","url":"\/documentation\/composablearchitecture\/teststore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","url":"\/documentation\/composablearchitecture\/teststore\/timeout","role":"symbol","title":"timeout","type":"topic","abstract":[{"text":"The default timeout used in all methods that take an optional timeout.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","abstract":[{"text":"The current exhaustivity level of the test store.","type":"text"}],"title":"exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/useMainSerialExecutor":{"url":"\/documentation\/composablearchitecture\/teststore\/usemainserialexecutor","role":"symbol","kind":"symbol","type":"topic","title":"useMainSerialExecutor","abstract":[{"type":"text","text":"Serializes all async work to the main thread for the lifetime of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"useMainSerialExecutor","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}}}
{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"inMemory","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"inMemory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FileStorage","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"}],"roleHeading":"Type Property","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"property","role":"symbol","externalID":"s:22ComposableArchitecture11FileStorageV8inMemoryACvpZ"},"abstract":[{"type":"text","text":"File storage that emulates a file system without actually writing anything to disk."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/filestorage\/inmemory"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"inMemory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"This is the version of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage"},{"type":"text","text":" dependency"},{"text":" ","type":"text"},{"type":"text","text":"that is used by default when running your app in tests and previews."}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"title":"FileStorageKey","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","url":"\/documentation\/composablearchitecture\/filestoragekey","kind":"symbol","abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileStorageKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage/inMemory":{"url":"\/documentation\/composablearchitecture\/filestorage\/inmemory","abstract":[{"text":"File storage that emulates a file system without actually writing anything to disk.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"inMemory","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","text":"FileStorage"}],"type":"topic","title":"inMemory","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage\/inMemory","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage":{"abstract":[{"type":"text","text":"A type that encapsulates saving and loading data from disk."}],"navigatorTitle":[{"text":"FileStorage","kind":"identifier"}],"kind":"symbol","title":"FileStorage","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","url":"\/documentation\/composablearchitecture\/filestorage","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileStorage","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultFileStorage":{"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultfilestorage","abstract":[{"type":"text","text":"Default file storage used by "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"defaultFileStorage"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","kind":"typeIdentifier","text":"FileStorage"}],"type":"topic","title":"defaultFileStorage","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Creates a persistence key that can read and write to a ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","title":"fileStorage(_:decoder:encoder:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"encoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","kind":"article","title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]}}}
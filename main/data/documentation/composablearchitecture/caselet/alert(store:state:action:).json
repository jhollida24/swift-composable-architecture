{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"alert"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ButtonAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15SwiftNavigation10AlertStateV","text":"AlertState"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"symbolKind":"method","extendedModule":"SwiftUICore","title":"alert(store:state:action:)","externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE5alert5store5state6actionQrAD5StoreCyAD17PresentationStateVyqd__GAD0K6ActionOyqd_0_GG_0A10Navigation05AlertL0Vyqd_1_GSgqd__cqd_0_qd_1_ctr1_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","roleHeading":"Instance Method","platforms":[{"unavailable":false,"introducedAt":"15.0","beta":false,"message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","deprecated":false,"deprecatedAt":"9999.0","name":"iOS"},{"name":"macOS","unavailable":false,"introducedAt":"12.0","deprecatedAt":"9999.0","message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","deprecated":false,"beta":false},{"deprecatedAt":"9999.0","beta":false,"introducedAt":"15.0","message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","unavailable":false,"deprecated":false,"name":"tvOS"},{"name":"watchOS","deprecated":false,"unavailable":false,"deprecatedAt":"9999.0","introducedAt":"8.0","beta":false,"message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs"}],"role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/alert(store:state:action:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"abstract":[{"text":"Displays an alert when the storeâ€™s state becomes non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", and dismisses it when it becomes","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/alert(store:state:action:)"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","type":"text"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"alert"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ButtonAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"state"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toDestinationState"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:15SwiftNavigation10AlertStateV","kind":"typeIdentifier","text":"AlertState"},{"kind":"text","text":"<"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fromDestinationAction"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A store that is focused on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"reference","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"type":"text","text":" for an"},{"text":" ","type":"text"},{"text":"alert.","type":"text"}]}],"name":"store"},{"name":"toDestinationState","content":[{"type":"paragraph","inlineContent":[{"text":"A transformation to extract alert state from the presentation state.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A transformation to embed alert actions into the presentation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"action."}]}],"name":"fromDestinationAction"}],"kind":"parameters"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"title":"SwitchStore","type":"topic","deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/alert(store:state:action:)":{"title":"alert(store:state:action:)","url":"\/documentation\/composablearchitecture\/caselet\/alert(store:state:action:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alert","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ButtonAction"},{"text":">(","kind":"text"},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AlertState","kind":"typeIdentifier","preciseIdentifier":"s:15SwiftNavigation10AlertStateV"},{"kind":"text","text":"<"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/alert(store:state:action:)","abstract":[{"type":"text","text":"Displays an alert when the storeâ€™s state becomes non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", and dismisses it when it becomes"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","title":"PresentationState","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","title":"CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","title":"Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PresentationAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}]}}}
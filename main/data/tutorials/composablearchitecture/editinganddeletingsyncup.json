{"variants":[{"paths":["\/tutorials\/composablearchitecture\/editinganddeletingsyncup"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"project","metadata":{"role":"project","category":"Building SyncUps","title":"Editing and deleting a sync-up","categoryPathComponent":"BuildingSyncUps"},"sections":[{"title":"Editing and deleting a sync-up","estimatedTimeInMinutes":30,"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}]}],"chapter":"Sync-up detail"},{"tasks":[{"anchor":"Editing-the-sync-up","title":"Editing the sync-up","stepsSection":[{"inlineContent":[{"text":"We want to present the ","type":"text"},{"type":"codeVoice","code":"SyncUpFormView"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"SyncUpDetailView"},{"type":"text","text":" in a sheet, and so we will"},{"text":" ","type":"text"},{"type":"text","text":"need to use the presentation tools of the library just as we did in the "},{"type":"codeVoice","code":"SyncUpListsView"},{"type":"text","text":"."}],"type":"paragraph"},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Go to the SyncUpDetail.swift file and update the "},{"code":"State","type":"codeVoice"},{"type":"text","text":" of the feature so that it holds on"},{"type":"text","text":" "},{"text":"to an optional piece of ","type":"text"},{"code":"SyncUpForm.State","type":"codeVoice"},{"type":"text","text":" using the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","isActive":true,"type":"reference"},{"type":"text","text":" "},{"text":"macro. When the state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" the sheet will be presented, and when it is "},{"type":"codeVoice","code":"nil"},{"text":" it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be dismissed."}],"type":"paragraph"}],"caption":[{"content":[{"type":"paragraph","inlineContent":[{"text":"We have collapsed the code in the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetailView"},{"type":"text","text":" for now."}]}],"style":"note","type":"aside","name":"Note"}],"type":"step","code":"EditingAndDeletingSyncUp-01-code-0001.swift","runtimePreview":null},{"code":"EditingAndDeletingSyncUp-01-code-0002.swift","type":"step","media":null,"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Add a case to the ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum to represent the"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"reference","isActive":true},{"type":"text","text":" of the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":"."}]}]},{"type":"step","media":null,"code":"EditingAndDeletingSyncUp-01-code-0003.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" reducer into the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" reducer by using the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"type":"text","text":" "},{"type":"text","text":"operator."}]}]},{"type":"paragraph","inlineContent":[{"text":"The domains of the child and parent features are now fully integrated together. We can now","type":"text"},{"type":"text","text":" "},{"type":"text","text":"implement the logic that causes the edit sheet to be presented."}]},{"content":[{"inlineContent":[{"text":"When the “Edit” button is tapped we can populate the ","type":"text"},{"type":"codeVoice","code":"editSyncUp"},{"type":"text","text":" state to represent the"},{"type":"text","text":" "},{"text":"sheet should be presented. We can pass along the local ","type":"text"},{"code":"syncUp","type":"codeVoice"},{"text":" value to the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":" so","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that it has the freshest data to edit."}],"type":"paragraph"}],"caption":[],"media":null,"code":"EditingAndDeletingSyncUp-01-code-0004.swift","runtimePreview":null,"type":"step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is the basics of presenting the “Edit sync-up” sheet from the sync-up detail view. There"},{"text":" ","type":"text"},{"text":"will be more to do in this reducer in a moment, but we can leave it here for now and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"concentrate on the view layer for a moment."}]},{"media":null,"content":[{"inlineContent":[{"text":"Update the ","type":"text"},{"type":"codeVoice","code":"store"},{"type":"text","text":" property in the view to be "},{"type":"codeVoice","code":"@Bindable"},{"type":"text","text":" since we will need to derive"},{"type":"text","text":" "},{"type":"text","text":"bindings from the store for driving navigation from state."}],"type":"paragraph"}],"code":"EditingAndDeletingSyncUp-01-code-0005.swift","caption":[{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We have collapsed the implementation of the "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" reducer in this snippet."}]}]}],"type":"step","runtimePreview":null},{"type":"step","content":[{"inlineContent":[{"text":"At the very bottom of the view use the ","type":"text"},{"code":"sheet(item:)","type":"codeVoice"},{"text":" modifier by deriving a binding to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" domain using "},{"type":"codeVoice","code":"SwiftUI\/Binding\/scope(state:action:fileID:filePath:line:column:)"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[],"code":"EditingAndDeletingSyncUp-01-code-0006.swift","runtimePreview":null,"media":null},{"runtimePreview":null,"type":"step","code":"EditingAndDeletingSyncUp-01-code-0007.swift","caption":[{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Just as we did in the "},{"code":"SyncUpsListView","type":"codeVoice"},{"type":"text","text":", we decided to keep the navigation"},{"type":"text","text":" "},{"text":"customizations (title and toolbar) in the parent domain rather than the child. This has","type":"text"},{"text":" ","type":"text"},{"text":"allowed us to provide domain specific versions of this UI for creating a new sync-up","type":"text"},{"type":"text","text":" "},{"text":"versus editing an existing sync-up.","type":"text"}],"type":"paragraph"}],"name":"Note"}],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide a navigation title and toolbar buttons to the sheet for saving and cancelling the"},{"type":"text","text":" "},{"type":"text","text":"edits made to the sync-up."}]}]},{"runtimePreview":null,"type":"step","media":null,"code":"EditingAndDeletingSyncUp-01-code-0008.swift","caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"These actions do not exist yet. We will be creating them next."}]}],"type":"aside","name":"Note"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Send actions to the store when each of the toolbar buttons is tapped."}]}]},{"type":"paragraph","inlineContent":[{"text":"We have now finished integrating the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" and "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" at the view layer, and so","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all that is left is to finish integrating the features at the reducer level."}]},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Add the new cases to the ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" enum that are being sent from the view.","type":"text"}]}],"media":null,"type":"step","code":"EditingAndDeletingSyncUp-01-code-0009.swift","runtimePreview":null},{"media":null,"code":"EditingAndDeletingSyncUp-01-code-0010.swift","caption":[{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Any changes the ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" made to its local "},{"type":"codeVoice","code":"syncUp"},{"type":"text","text":" state will be discarded"},{"type":"text","text":" "},{"type":"text","text":"because that state is fully disconnected from the "},{"type":"codeVoice","code":"syncUp"},{"text":" held in the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":"."}]}]}],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Implement the "},{"code":"cancelEditButtonTapped","type":"codeVoice"},{"text":" action by simply clearing out the ","type":"text"},{"type":"codeVoice","code":"editSyncUp"},{"text":" state.","type":"text"},{"type":"text","text":" "},{"text":"This will cause the view to dismiss the sheet.","type":"text"}],"type":"paragraph"}],"type":"step"},{"content":[{"inlineContent":[{"type":"text","text":"Implement the "},{"type":"codeVoice","code":"doneEditingButtonTapped"},{"text":" action by grabbing the latest ","type":"text"},{"code":"syncUp","type":"codeVoice"},{"text":" value from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"editSyncUp","type":"codeVoice"},{"type":"text","text":" state, and replacing "},{"code":"SyncUpDetail","type":"codeVoice"},{"text":"’s state with that value.","type":"text"}],"type":"paragraph"}],"caption":[],"type":"step","code":"EditingAndDeletingSyncUp-01-code-0011.swift","runtimePreview":null,"media":null},{"type":"step","runtimePreview":null,"media":"EditingAndDeletingSyncUp-01-cover-480p.mov","content":[{"type":"paragraph","inlineContent":[{"text":"Run the preview to see that you can tap the “Edit” button to bring up the sync-up form","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sheet. Then make some changes to the sync-up, and see that tapping “Done” causes those"},{"text":" ","type":"text"},{"text":"changes to be committed to the sync-up in the detail screen.","type":"text"}]}],"caption":[],"code":null}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","media":"EditingAndDeletingSyncUp-01-cover-480p.mov","content":[{"inlineContent":[{"type":"text","text":"To edit the sync-up we will reuse the "},{"code":"SyncUpFormView","type":"codeVoice"},{"text":" that we previously used for ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"adding"}]},{"type":"text","text":" a"},{"type":"text","text":" "},{"text":"sync-up. This will allow us to see how easy it is to reuse features in the Composable","type":"text"},{"type":"text","text":" "},{"text":"Architecture, and it will allow us to explore how to communicate from the child feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"back to the parent."}],"type":"paragraph"}]}]},{"title":"Deleting the sync-up","anchor":"Deleting-the-sync-up","stepsSection":[{"type":"paragraph","inlineContent":[{"text":"Technically, alerts can be shown in Composable Architecture features in exactly the same way","type":"text"},{"type":"text","text":" "},{"text":"they are in vanilla SwiftUI by using the various ","type":"text"},{"type":"codeVoice","code":"alert"},{"text":" view modifiers. However, the library","type":"text"},{"type":"text","text":" "},{"text":"comes with some tools that can improve how alerts are shown, and can make the alerts more","type":"text"},{"type":"text","text":" "},{"text":"easily testable. We will use those tools.","type":"text"}]},{"runtimePreview":null,"content":[{"inlineContent":[{"text":"We start by modeling a new ","type":"text"},{"code":"Alert","type":"codeVoice"},{"type":"text","text":" enum nested "},{"inlineContent":[{"type":"text","text":"inside"}],"type":"emphasis"},{"type":"text","text":" the "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum that represents"},{"type":"text","text":" "},{"text":"all the actions the user can take in the alert. The user can only confirm deletion or cancel","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deletion, and we do not have to model the cancel action. That is automatically taken care of"},{"type":"text","text":" "},{"type":"text","text":"by the library’s navigation tools."}],"type":"paragraph"}],"caption":[{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"We are pre-emptively applying the "},{"type":"codeVoice","code":"@CasePathable"},{"text":" macro to make it possible to write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tests against these actions in a keypath-like syntax. The "},{"type":"codeVoice","code":"@CasePathable"},{"text":" macro is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"automatically applied to "},{"type":"codeVoice","code":"Action"},{"text":" enums inside reducers, but macros cannot recursively apply","type":"text"},{"type":"text","text":" "},{"text":"themselves and so we must do it manually sometimes.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"media":null,"code":"EditingAndDeletingSyncUp-02-code-0001.swift","type":"step"},{"code":"EditingAndDeletingSyncUp-02-code-0002.swift","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add another piece of optional state using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"},{"type":"text","text":" macro,"},{"text":" ","type":"text"},{"type":"text","text":"this time representing whether or not an alert is shown."}]}],"caption":[{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"We are using the "},{"identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swiftui-navigation\/1.2.0\/documentation\/swiftuinavigationcore\/alertstate","isActive":true,"type":"reference"},{"text":" from our","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swiftui-navigation","isActive":true},{"type":"text","text":" library, which automatically comes with the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture. It is a pure data description of an alert that can be shown to the user, and"},{"text":" ","type":"text"},{"text":"it is generic over the type of actions that can be sent from the alert.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}],"type":"step"},{"code":"EditingAndDeletingSyncUp-02-code-0003.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add another "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"text":" case to the ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum that"},{"text":" ","type":"text"},{"text":"represents the actions the alert can send.","type":"text"}]}],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handle the "},{"code":".alert","type":"codeVoice"},{"type":"text","text":" case in the reducer, and use the"},{"text":" ","type":"text"},{"code":"ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)-7s8h2","type":"codeVoice"},{"text":" operator","type":"text"},{"type":"text","text":" "},{"type":"text","text":"again to integrate the alert’s logic into the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" reducer."}]}],"caption":[],"type":"step","code":"EditingAndDeletingSyncUp-02-code-0004.swift","media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"Integrating the logic of an alert into a feature is a bit different from integrating the","type":"text"},{"type":"text","text":" "},{"text":"logic of a fully fledged feature. This is because alerts are immediately dismissed when a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"button is tapped and has no internal logic or behavior of its own. For this reason there is"},{"text":" ","type":"text"},{"text":"no reducer to specify in the trailing closure of ","type":"text"},{"type":"codeVoice","code":"ifLet"},{"text":", and in fact it can be removed.","type":"text"}]},{"code":"EditingAndDeletingSyncUp-02-code-0005.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove the trailing closure from the "},{"type":"codeVoice","code":"ifLet"},{"text":" because the alert does not have any additional","type":"text"},{"text":" ","type":"text"},{"text":"behavior to execute.","type":"text"}]}],"media":null,"type":"step","runtimePreview":null},{"inlineContent":[{"type":"text","text":"We now have the alert integrated into the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":", but we aren’t yet populating the"},{"type":"text","text":" "},{"type":"codeVoice","code":"alert"},{"type":"text","text":" state to actually present the alert. This is done by constructing a value of"},{"text":" ","type":"text"},{"code":"AlertState","type":"codeVoice"},{"type":"text","text":", which is a data type that represents all of the properties of an alert, such"},{"type":"text","text":" "},{"text":"as its title, message and buttons. Its primary purpose is to be ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":"-friendly so that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"alerts can be tested."}],"type":"paragraph"},{"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Populate the "},{"type":"codeVoice","code":"alert"},{"text":" property by constructing ","type":"text"},{"code":"AlertState","type":"codeVoice"},{"type":"text","text":". This is done by providing three"},{"type":"text","text":" "},{"type":"text","text":"trailing closures: one for the title, one for the buttons to show in the alert, and another"},{"type":"text","text":" "},{"type":"text","text":"for the message in the alert."}]}],"code":"EditingAndDeletingSyncUp-02-code-0006.swift","type":"step","caption":[]},{"inlineContent":[{"type":"text","text":"That’s all it takes to create "},{"type":"codeVoice","code":"AlertState"},{"text":". It contains all of the information for the view","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to display the alert, which we will do in a moment."}],"type":"paragraph"},{"inlineContent":[{"text":"However, constructing ","type":"text"},{"type":"codeVoice","code":"AlertState"},{"type":"text","text":" values can be quite long, and so sometimes you may want"},{"text":" ","type":"text"},{"type":"text","text":"to extract their creation to an extension on "},{"type":"codeVoice","code":"AlertState"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extract the alert state to an extension on "},{"code":"AlertState","type":"codeVoice"},{"text":".","type":"text"}]}],"caption":[],"media":null,"code":"EditingAndDeletingSyncUp-02-code-0007.swift","runtimePreview":null},{"inlineContent":[{"type":"text","text":"Next we need to handle the new alert actions in the reducer."}],"type":"paragraph"},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Destructure the new "},{"type":"codeVoice","code":".alert"},{"text":" actions in the ","type":"text"},{"type":"codeVoice","code":"switch"},{"text":" statement of the core ","type":"text"},{"type":"codeVoice","code":"Reduce"},{"text":".","type":"text"}]}],"code":"EditingAndDeletingSyncUp-02-code-0008.swift","media":null,"runtimePreview":null,"type":"step"},{"caption":[],"media":null,"code":"EditingAndDeletingSyncUp-02-code-0009.swift","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"There is nothing to do in the ","type":"text"},{"code":".alert(.dismiss)","type":"codeVoice"},{"type":"text","text":" case because the "},{"type":"codeVoice","code":"ifLet"},{"text":" operator will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"automatically clean up the state for you."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":".alert(.presented)"},{"type":"text","text":" case is more subtle, though. This action is sent when the user"},{"text":" ","type":"text"},{"text":"confirms that they want to delete the sync-up, and so somehow we have to remove the ","type":"text"},{"code":"syncUp","type":"codeVoice"},{"text":" we","type":"text"},{"type":"text","text":" "},{"type":"text","text":"have in state from the collection of sync-ups that is in the "},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"However, remember that in ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","type":"reference"},{"text":" we showed how to persist the collection","type":"text"},{"text":" ","type":"text"},{"text":"of sync-ups using the ","type":"text"},{"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference"},{"text":" property wrapper with the","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true},{"type":"text","text":" persistence strategy. This"},{"type":"text","text":" "},{"type":"text","text":"gives the app "},{"type":"emphasis","inlineContent":[{"text":"global","type":"text"}]},{"text":" access to that state, and we can make edits to it from anywhere. We can","type":"text"},{"text":" ","type":"text"},{"text":"even do it directly inline in the ","type":"text"},{"type":"codeVoice","code":".confirmButtonTapped"},{"type":"text","text":" action."}]},{"content":[{"inlineContent":[{"type":"text","text":"Use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"},{"type":"text","text":" property wrapper with the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"text":" persistence strategy to get","type":"text"},{"type":"text","text":" "},{"text":"a reference to the sync-ups loaded from disk.","type":"text"}],"type":"paragraph"}],"media":null,"code":"EditingAndDeletingSyncUp-02-code-0010.swift","runtimePreview":null,"caption":[{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This does not actually load data from disk. The data has already been loaded from","type":"text"},{"type":"text","text":" "},{"text":"disk and cached in the ","type":"text"},{"overridingTitle":"@Shared","overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true},{"type":"text","text":" reference. This is only giving us access"},{"type":"text","text":" "},{"text":"to that reference.","type":"text"}]}]}],"type":"step"},{"caption":[],"runtimePreview":null,"type":"step","media":null,"code":"EditingAndDeletingSyncUp-02-code-0011.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" of the sync-up held in the detail’s state to remove it from the "},{"code":"syncUps","type":"codeVoice"},{"text":" ","type":"text"},{"text":"collection persisted to disk.","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"That’s all it takes to delete the sync-up from the persisted array of sync-ups. It may trouble","type":"text"},{"text":" ","type":"text"},{"text":"you that we are reaching out to a seemingly global ","type":"text"},{"code":"syncUps","type":"codeVoice"},{"type":"text","text":" variable and mutating it."},{"type":"text","text":" "},{"text":"However, this is no different than making an API request to delete data on some external","type":"text"},{"type":"text","text":" "},{"type":"text","text":"server. Typically for that situation we use dependencies to make the API operation testable,"},{"type":"text","text":" "},{"text":"but we don’t need to do that with ","type":"text"},{"isActive":true,"type":"reference","overridingTitle":"@Shared","overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"},{"text":". It is testable by default.","type":"text"}]},{"inlineContent":[{"text":"If it truly bothers you to access the global ","type":"text"},{"type":"codeVoice","code":"syncUps"},{"text":" state from within the detail feature,","type":"text"},{"type":"text","text":" "},{"text":"then you can instead send a “delegate” action from the detail that the parent feature","type":"text"},{"text":" ","type":"text"},{"text":"intercepts and implements the deleting logic. That will allow the parent to handle deletion","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"while the child remains ignorant to those details."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There is one more addition we want to make to the deletion functionality before moving on."},{"type":"text","text":" "},{"text":"When the user confirms deletion of the sync-up we should dismiss the detail view from being","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"presented, as it’s no longer relevant. After all, the sync-up is being deleted!"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This allows us to demonstrate another superpower of the Composable Architecture. The library"},{"text":" ","type":"text"},{"text":"comes with a powerful dependency called ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","type":"reference","isActive":true},{"text":" that allows a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature to dismiss itself if it is being presented, and if the feature was integrated into the"},{"text":" ","type":"text"},{"type":"text","text":"parent using the library’s navigation tools. This can be powerful because it allows the child"},{"type":"text","text":" "},{"type":"text","text":"features to encapsulate as much of their logic as possible without having to explicitly"},{"text":" ","type":"text"},{"text":"communicate with the parent. It works similarly to SwiftUI’s ","type":"text"},{"type":"codeVoice","code":"@Environment(\\.dismiss)"},{"text":", but it","type":"text"},{"text":" ","type":"text"},{"text":"is also distinct from it.","type":"text"}],"type":"paragraph"},{"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a dependency on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","isActive":true,"type":"reference"},{"text":" to the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature"},{"text":" ","type":"text"},{"text":"by using the ","type":"text"},{"type":"codeVoice","code":"@Dependency"},{"type":"text","text":" property wrapper."}]}],"runtimePreview":null,"code":"EditingAndDeletingSyncUp-02-code-0012.swift"},{"inlineContent":[{"type":"text","text":"To dismiss a child feature with the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","type":"reference","isActive":true},{"type":"text","text":" dependency you"},{"text":" ","type":"text"},{"text":"just have to invoke it as if it’s a function: ","type":"text"},{"type":"codeVoice","code":"dismiss()"},{"type":"text","text":". However, the dismiss effect is an"},{"text":" ","type":"text"},{"text":"asynchronous function, and therefore it cannot be invoked directly in the reducer. It can","type":"text"},{"type":"text","text":" "},{"text":"only be invoked inside an effect, and so we must use the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)","isActive":true},{"type":"text","text":" effect, which"},{"type":"text","text":" "},{"type":"text","text":"gives us an asynchronous context to execute the work in, as well as a handle on"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send","isActive":true},{"type":"text","text":" for sending actions back into the system."}],"type":"paragraph"},{"code":"EditingAndDeletingSyncUp-02-code-0013.swift","type":"step","content":[{"inlineContent":[{"text":"Return a ","type":"text"},{"type":"codeVoice","code":".run"},{"text":" effect to send the delegate action and invoke ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"type":"text","text":" in one single"},{"type":"text","text":" "},{"type":"text","text":"effect."}],"type":"paragraph"}],"caption":[],"media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"Next we need to integrate the alert into the view layer so that an alert actually shows when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":"alert","type":"codeVoice"},{"type":"text","text":" state becomes non-"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"EditingAndDeletingSyncUp-02-code-0014.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the "},{"type":"codeVoice","code":"SyncUpDetailView"},{"type":"text","text":", go to the bottom and use the "},{"type":"codeVoice","code":"SwiftUI\/View\/alert(_:)"},{"text":" view","type":"text"},{"type":"text","text":" "},{"text":"modifier that comes with the library. This will cause an alert to be presented when the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"alert"},{"type":"text","text":" state is populated."}]}]},{"inlineContent":[{"type":"text","text":"We have now finished the sync-up deletion functionality in the detail screen. Unfortunately we"},{"type":"text","text":" "},{"type":"text","text":"can’t yet test deletion because we still have no way to navigate to the detail screen from the"},{"type":"text","text":" "},{"type":"text","text":"sync-ups list screen."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But, before getting to that, let’s take a quick side excursion to clean up our domain"},{"text":" ","type":"text"},{"type":"text","text":"modeling in this feature."}],"type":"paragraph"}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","media":"EditingAndDeletingSyncUp-02-cover-480p.mov","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we will implement the logic for deleting the sync-up from the detail screen. Because"},{"type":"text","text":" "},{"text":"deletion is performed by a simple button, we want to protect from accidental deletions by","type":"text"},{"type":"text","text":" "},{"text":"asking the user for confirmation using an alert. This will give us an opportunity to explore","type":"text"},{"type":"text","text":" "},{"text":"how one can show alerts in the Composable Architecture.","type":"text"}]}]}]},{"stepsSection":[{"runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Further","type":"text"}]},{"text":", the ","type":"text"},{"code":"Destination","type":"codeVoice"},{"type":"text","text":" type will be an "},{"inlineContent":[{"type":"text","text":"enum"}],"type":"emphasis"},{"type":"text","text":". This is different than other reducers"},{"text":" ","type":"text"},{"text":"we have encountered so far. The ","type":"text"},{"overridingTitleInlineContent":[{"code":"@Reducer","type":"codeVoice"}],"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","overridingTitle":"@Reducer","isActive":true},{"type":"text","text":" has special behavior when"},{"text":" ","type":"text"},{"type":"text","text":"applied to enums that allows one to compose multiple reducers into a single package."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"As we have seen it is important for ","type":"text"},{"type":"codeVoice","code":"State"},{"type":"text","text":" types to be "},{"type":"codeVoice","code":"Equatable"},{"text":" for","type":"text"},{"type":"text","text":" "},{"text":"testing, and so we are proactively making the ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" type generated for the "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" "},{"text":"reducer equatable ","type":"text"},{"inlineContent":[{"text":"via","type":"text"}],"type":"emphasis"},{"type":"text","text":" extension."}]}],"name":"Important","type":"aside","style":"important"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"We have collapsed the implementation of "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpDetailView","type":"codeVoice"},{"text":" in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this code snippet."}],"type":"paragraph"}],"name":"Note"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a whole new reducer nested inside the "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" called "},{"type":"codeVoice","code":"Destination"},{"text":". This","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer will represent all of the places one can navigate to from the detail screen, and"},{"text":" ","type":"text"},{"type":"text","text":"that will give us a single piece of state to drive navigation rather than having multiple"},{"text":" ","type":"text"},{"type":"text","text":"optional values."}]}],"media":null,"code":"EditingAndDeletingSyncUp-03-code-0001.swift"},{"code":"EditingAndDeletingSyncUp-03-code-0002.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for each destination that can be navigated to from this feature. Each case will"},{"type":"text","text":" "},{"type":"text","text":"hold onto the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"reducer"}]},{"type":"text","text":" type of the feature being navigated to, except for the "},{"type":"codeVoice","code":"alert"},{"text":" case.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It will simply hold onto "},{"type":"codeVoice","code":"AlertState"},{"type":"text","text":"."}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will also move the "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":" action enum from the "},{"code":"SyncUpDetail.Action","type":"codeVoice"},{"type":"text","text":" type to be nested"},{"text":" ","type":"text"},{"text":"inside ","type":"text"},{"type":"codeVoice","code":"Destination"},{"text":".","type":"text"}]}],"media":null,"runtimePreview":null},{"inlineContent":[{"type":"text","text":"That is all it takes to define a dedicated "},{"type":"codeVoice","code":"Destination"},{"text":" reducer that encapsulates all of the","type":"text"},{"text":" ","type":"text"},{"text":"logic and behavior of the features that can be navigated to. You can right click on the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Reducer"}],"overridingTitle":"@Reducer","isActive":true,"type":"reference"},{"text":" macro and select “Expand macro” in Xcode to see all of the code","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is being written for you."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Next we need to integrate this new "},{"code":"Destination","type":"codeVoice"},{"type":"text","text":" reducer into the main "},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" reducer.","type":"text"}],"type":"paragraph"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace the two independent pieces of optional state in "},{"type":"codeVoice","code":"SyncUpDetail.State"},{"text":" for a single","type":"text"},{"type":"text","text":" "},{"text":"piece of optional ","type":"text"},{"type":"codeVoice","code":"Destination.State"},{"type":"text","text":"."}]}],"code":"EditingAndDeletingSyncUp-03-code-0003.swift","caption":[{"inlineContent":[{"text":"We now have just one single piece of optional state that determines if navigation is active","type":"text"},{"text":" ","type":"text"},{"text":"and where we are being navigated to.","type":"text"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"There will be compiler errors after completing this step, but we will fix them in","type":"text"},{"text":" ","type":"text"},{"text":"upcoming steps.","type":"text"}]}],"type":"aside"}],"runtimePreview":null,"media":null},{"caption":[],"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Replace the two action cases for the alert and edit sheet with a single case that holds on"},{"type":"text","text":" "},{"type":"text","text":"to a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"text":" of ","type":"text"},{"code":"Destination.Action","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"code":"EditingAndDeletingSyncUp-03-code-0004.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace the two "},{"code":"ifLet","type":"codeVoice"},{"text":" operators at the bottom of ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" with a single one that"},{"type":"text","text":" "},{"text":"composes the ","type":"text"},{"type":"codeVoice","code":"Destination"},{"text":" reducer.","type":"text"}]}],"code":"EditingAndDeletingSyncUp-03-code-0005.swift","caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Due to the expanded code from the "},{"isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Reducer"}],"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","overridingTitle":"@Reducer"},{"type":"text","text":" macro we don’t even"},{"type":"text","text":" "},{"text":"need to provide a trailing closure to ","type":"text"},{"code":"ifLet","type":"codeVoice"},{"type":"text","text":". It can be inferred automatically."}]}],"type":"aside","name":"Note"}],"media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is all it takes to integrate the "},{"code":"Destination","type":"codeVoice"},{"type":"text","text":" reducer into the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" reducer."},{"type":"text","text":" "},{"text":"Next we have to update the core ","type":"text"},{"type":"codeVoice","code":"Reduce"},{"text":" to handle the new destination state and actions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properly."}]},{"type":"step","caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"Update the pattern matching for the alert to go through the "},{"type":"codeVoice","code":".destination(.presented)"},{"type":"text","text":""},{"type":"text","text":" "},{"text":"case.","type":"text"}],"type":"paragraph"}],"code":"EditingAndDeletingSyncUp-03-code-0006.swift","runtimePreview":null},{"media":null,"caption":[],"content":[{"inlineContent":[{"text":"Return ","type":"text"},{"code":".none","type":"codeVoice"},{"type":"text","text":" for all other "},{"type":"codeVoice","code":".destination"},{"text":" actions.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"EditingAndDeletingSyncUp-03-code-0007.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update where we "},{"type":"codeVoice","code":"nil"},{"text":" out ","type":"text"},{"type":"codeVoice","code":"editSyncUp"},{"type":"text","text":" state to instead "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" out the "},{"type":"codeVoice","code":"destination"},{"text":" state.","type":"text"}]}],"media":null,"caption":[],"code":"EditingAndDeletingSyncUp-03-code-0008.swift","runtimePreview":null},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update where we populate the "},{"type":"codeVoice","code":"alert"},{"type":"text","text":" state to instead point the "},{"code":"destination","type":"codeVoice"},{"type":"text","text":" state to the"},{"text":" ","type":"text"},{"code":".alert","type":"codeVoice"},{"type":"text","text":" case."}]}],"type":"step","code":"EditingAndDeletingSyncUp-03-code-0009.swift","runtimePreview":null,"media":null},{"type":"step","code":"EditingAndDeletingSyncUp-03-code-0010.swift","caption":[],"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the "},{"type":"codeVoice","code":".doneEditingButtonTapped"},{"text":" action by grabbing the edited sync-up from the ","type":"text"},{"type":"codeVoice","code":".edit"},{"text":" ","type":"text"},{"text":"case of the ","type":"text"},{"code":"destination","type":"codeVoice"},{"text":" enum.","type":"text"}]}]},{"code":"EditingAndDeletingSyncUp-03-code-0011.swift","content":[{"inlineContent":[{"text":"Update where we previously populated the ","type":"text"},{"type":"codeVoice","code":"editSyncUp"},{"text":" state to instead point the","type":"text"},{"text":" ","type":"text"},{"code":"destination","type":"codeVoice"},{"type":"text","text":" enum to the "},{"type":"codeVoice","code":".edit"},{"type":"text","text":" case with some "},{"code":"SyncUpForm","type":"codeVoice"},{"text":" state.","type":"text"}],"type":"paragraph"}],"caption":[],"type":"step","media":null,"runtimePreview":null},{"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Update the extension on ","type":"text"},{"type":"codeVoice","code":"AlertState"},{"type":"text","text":" to point to the "},{"type":"codeVoice","code":"Destination"},{"text":"’s alert action.","type":"text"}]}],"code":"EditingAndDeletingSyncUp-03-code-0012.swift","runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s all it takes to fully integrate the "},{"code":"Destination","type":"codeVoice"},{"text":" reducer into the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" "},{"type":"text","text":"reducer. Next we have to update the view so that we can drive the presentation of the alert"},{"type":"text","text":" "},{"type":"text","text":"and sheet from the destination enum."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the "},{"type":"codeVoice","code":"SwiftUI\/View\/alert(_:)"},{"text":" and ","type":"text"},{"code":".sheet(item:)","type":"codeVoice"},{"type":"text","text":" modifiers at the bottom of the"},{"type":"text","text":" "},{"type":"text","text":"view so that the "},{"type":"codeVoice","code":"$store.scope"},{"text":" further singles out the case for driving navigation.","type":"text"}]}],"type":"step","caption":[],"code":"EditingAndDeletingSyncUp-03-code-0013.swift","media":null,"runtimePreview":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is all it takes to finish the refactor to use an enum to drive navigation rather than"},{"type":"text","text":" "},{"text":"multiple optionals. Our domain is more concisely modeled, and we can know precisely when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"something is being presented. We merely have to check if "},{"code":"destination != nil","type":"codeVoice"},{"text":".","type":"text"}]}],"title":"More concise domain modeling","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" works well enough right now, but there is something not ideal about how its","type":"text"},{"type":"text","text":" "},{"text":"domain is modeled. We are representing the alert and edit sheet using two independent optional","type":"text"},{"text":" ","type":"text"},{"text":"values, which allows for invalid states. We only expect that either the alert ","type":"text"},{"inlineContent":[{"text":"or","type":"text"}],"type":"emphasis"},{"type":"text","text":" sheet is"},{"type":"text","text":" "},{"type":"text","text":"shown at one time, but it is possible for both optionals to be non-"},{"type":"codeVoice","code":"nil"},{"text":" at the same time.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And this problem gets bigger with the most destinations you can navigate to from a feature."},{"text":" ","type":"text"},{"type":"text","text":"For example, if there are 4 possible destinations one can navigate to, then modeling that"},{"type":"text","text":" "},{"text":"with optionals leads to 2^4 = 16 possible states, only 5 of which are valid. Either all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optionals should be "},{"code":"nil","type":"codeVoice"},{"text":" or exactly one should be non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This kind of inconcise domain modeling can leak complexity into your features, and luckily"},{"type":"text","text":" "},{"type":"text","text":"there is a better way."}]}],"mediaPosition":"trailing"}],"anchor":"More-concise-domain-modeling"}],"kind":"tasks"},{"title":"Testing the sync-up detail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"text":" ","type":"text"},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"type":"text","text":" "},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"type":"text","text":" "},{"text":"changes with confidence.","type":"text"}],"action":{"isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","type":"reference"},"featuredEyebrow":"Tutorial","kind":"callToAction"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"]],"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}]},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","kind":"project","role":"project","estimatedTime":"10min","title":"Presenting the sync-up form","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","type":"topic","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}]},"EditingAndDeletingSyncUp-03-code-0004.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":23},{"line":26},{"line":29},{"line":30},{"line":31},{"line":32}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    \/\/ case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","    \/\/ case editSyncUp(PresentationAction<SyncUpForm.Action>)","    \/\/ enum Alert {","    \/\/   case confirmButtonTapped","    \/\/ }","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-03-code-0004.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"url":"\/tutorials\/composablearchitecture\/testingnavigation","title":"Testing navigation","estimatedTime":"10min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MeetingView"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"type":"text","text":" "},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","title":"Create the sync-up detail"},"EditingAndDeletingSyncUp-02-code-0011.swift":{"identifier":"EditingAndDeletingSyncUp-02-code-0011.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .none","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}",""],"highlights":[{"line":31},{"line":32},{"line":85}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"EditingAndDeletingSyncUp-02-code-0003.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":14}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-02-code-0003.swift","fileType":"swift"},"EditingAndDeletingSyncUp-02-code-0008.swift":{"identifier":"EditingAndDeletingSyncUp-02-code-0008.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        ","      case .alert(.dismiss):","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":29},{"line":31},{"line":32}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"EditingAndDeletingSyncUp-02-code-0001.swift":{"fileType":"swift","identifier":"EditingAndDeletingSyncUp-02-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":18},{"line":19},{"line":20},{"line":21}],"type":"file","fileName":"SyncUpDetail.swift","syntax":"swift"},"EditingAndDeletingSyncUp-02-cover-480p.mov":{"type":"video","poster":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/EditingAndDeletingSyncUp-02-cover-480p.mov"}],"identifier":"EditingAndDeletingSyncUp-02-cover-480p.mov","alt":null},"EditingAndDeletingSyncUp-01-code-0007.swift":{"syntax":"swift","identifier":"EditingAndDeletingSyncUp-01-code-0007.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","    .sheet(item: $store.scope(state: \\.editSyncUp, action: \\.editSyncUp)) { editSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: editSyncUpStore)","          .navigationTitle(store.syncUp.title)","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Cancel\") {","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Done\") {","              }","            }","          }","      }","    }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"highlights":[{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92}],"type":"file","fileName":"SyncUpDetail.swift","fileType":"swift"},"EditingAndDeletingSyncUp-03-code-0001.swift":{"type":"file","identifier":"EditingAndDeletingSyncUp-03-code-0001.swift","fileName":"SyncUpDetail.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":11}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","  }","  \/\/ ...","}","extension SyncUpDetail.Destination.State: Equatable {}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"fileType":"swift","syntax":"swift"},"EditingAndDeletingSyncUp-01-code-0008.swift":{"syntax":"swift","identifier":"EditingAndDeletingSyncUp-01-code-0008.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","    .sheet(item: $store.scope(state: \\.editSyncUp, action: \\.editSyncUp)) { editSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: editSyncUpStore)","          .navigationTitle(store.syncUp.title)","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Cancel\") {","                store.send(.cancelEditButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Done\") {","                store.send(.doneEditingButtonTapped)","              }","            }","          }","      }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"highlights":[{"line":86},{"line":91}],"type":"file","fileName":"SyncUpDetail.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"title":"Domain models","kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"text":" ","type":"text"},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","title":"Adding attendees"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"type":"text","text":" "},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"role":"project","estimatedTime":"5min","type":"topic","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","title":"Testing the list of sync-ups"},"EditingAndDeletingSyncUp-02-code-0010.swift":{"identifier":"EditingAndDeletingSyncUp-02-code-0010.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":30},{"line":31}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","title":"Deleting a sync-up","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature, the ","type":"text"},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/run(priority:operation:catch:fileID:filePath:line:column:)":{"kind":"symbol","title":"run(priority:operation:catch:fileID:filePath:line:column:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"kind":"text","text":"?, "},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture4SendV","text":"Send","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"catch","kind":"externalParam"},{"text":": ((any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture4SendV","kind":"typeIdentifier","text":"Send"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Wraps an asynchronous unit of work that can emit actions any number of times in an effect."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/effect\/run(priority:operation:catch:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","title":"Removing attendees"},"EditingAndDeletingSyncUp-03-code-0002.swift":{"fileName":"SyncUpDetail.swift","identifier":"EditingAndDeletingSyncUp-03-code-0002.swift","fileType":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","  \/\/ ...","}","extension SyncUpDetail.Destination.State: Equatable {}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"type":"file","syntax":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","kind":"section","role":"pseudoSymbol","title":"Non-exhaustive testing","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","type":"section","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups","title":"Persisting sync-ups","estimatedTime":"5min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"title":"Navigating to the record meeting feature","kind":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"},"EditingAndDeletingSyncUp-03-code-0006.swift":{"identifier":"EditingAndDeletingSyncUp-03-code-0006.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .destination:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":35},{"line":36}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"EditingAndDeletingSyncUp-03-code-0012.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":70}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.destination = nil","        return .none","","      case .deleteButtonTapped:","        state.destination = .alert(.deleteSyncUp)","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.destination?.edit?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.destination = nil","        return .none","","      case .editButtonTapped:","        \/\/ state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        state.destination = .edit(SyncUpForm.State(syncUp: state.syncUp))","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Destination.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-03-code-0012.swift","fileType":"swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"type":"topic","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"kind":"symbol","title":"Shared","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","title":"Creating the app feature","kind":"section","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PresentationAction","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","title":"Navigate to a meeting"},"http://github.com/pointfreeco/swiftui-navigation":{"titleInlineContent":[{"type":"text","text":"SwiftUINavigation"}],"url":"http:\/\/github.com\/pointfreeco\/swiftui-navigation","type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swiftui-navigation","title":"SwiftUINavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"title":"Testing persistence","kind":"section","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"},"EditingAndDeletingSyncUp-01-code-0010.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-01-code-0010.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"section","role":"pseudoSymbol","title":"Navigating to the detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","type":"section","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}]},"EditingAndDeletingSyncUp-01-code-0001.swift":{"identifier":"EditingAndDeletingSyncUp-01-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case deleteButtonTapped","    case editButtonTapped","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        return .none","      }","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":8}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"section","role":"pseudoSymbol","title":"A tour of SyncUps","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","type":"section","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","title":"Testing the add sync-up flow","kind":"project","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"text":" ","type":"text"},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"project"},"EditingAndDeletingSyncUp-03-code-0009.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":40},{"line":49},{"line":50}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","        ","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.destination = nil","        return .none","","      case .deleteButtonTapped:","        \/\/ state.alert = .deleteSyncUp","        state.destination = .alert(.deleteSyncUp)","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-03-code-0009.swift","fileType":"swift"},"EditingAndDeletingSyncUp-03-code-0010.swift":{"identifier":"EditingAndDeletingSyncUp-03-code-0010.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.destination = nil","        return .none","","      case .deleteButtonTapped:","        state.destination = .alert(.deleteSyncUp)","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.destination?.edit?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.destination = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":40},{"line":53},{"line":56}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"EditingAndDeletingSyncUp-02-code-0006.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert:","        return .none","        ","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = AlertState {","          TextState(\"Delete?\")","        } actions: {","          ButtonState(role: .destructive, action: .confirmButtonTapped) {","            TextState(\"Yes\")","          }","          ButtonState(role: .cancel) {","            TextState(\"Nevermind\")","          }","        } message: {","          TextState(\"Are you sure you want to delete this meeting?\")","        }","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-02-code-0006.swift","fileType":"swift"},"EditingAndDeletingSyncUp-03-code-0008.swift":{"identifier":"EditingAndDeletingSyncUp-03-code-0008.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.destination = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":45}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","title":"Create a new feature"},"EditingAndDeletingSyncUp-01-code-0004.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":25}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case deleteButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-01-code-0004.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"url":"\/tutorials\/buildingsyncups\/new-sync-up-form","title":"New sync-up form","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","abstract":[],"type":"topic","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","title":"Testing the timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"section","role":"pseudoSymbol","title":"More concise domain modeling","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","type":"section","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}]},"EditingAndDeletingSyncUp-02-code-0004.swift":{"identifier":"EditingAndDeletingSyncUp-02-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert:","        return .none","        ","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) {","      ","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":29},{"line":30},{"line":31},{"line":57},{"line":58},{"line":59}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"EditingAndDeletingSyncUp-02-code-0009.swift":{"syntax":"swift","fileName":"SyncUpDetail.swift","highlights":[{"line":32}],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        ","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-02-code-0009.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","title":"Integrating the feature views together"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"title":"Sync-up form basics","kind":"section","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"text":" ","type":"text"},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},"EditingAndDeletingSyncUp-02-code-0005.swift":{"identifier":"EditingAndDeletingSyncUp-02-code-0005.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert:","        return .none","        ","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"highlights":[{"line":57}],"syntax":"swift","fileType":"swift","fileName":"SyncUpDetail.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"type":"text","text":" "},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"title":"Deleting the sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},"EditingAndDeletingSyncUp-02-code-0012.swift":{"syntax":"swift","highlights":[{"line":26},{"line":27}],"fileName":"SyncUpDetail.swift","type":"file","identifier":"EditingAndDeletingSyncUp-02-code-0012.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .none","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}",""],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"title":"Adding a meeting timer","kind":"project","role":"project","estimatedTime":"25min","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","url":"\/tutorials\/composablearchitecture\/implementingtimer","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"title":"Navigating to sync-up detail","kind":"article","abstract":[],"role":"article","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"title":"Building SyncUps","url":"\/tutorials\/buildingsyncups","kind":"overview","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"text":" ","type":"text"},{"text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on","type":"text"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"role":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation","type":"topic","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","title":"Navigating to a meeting","kind":"project","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"role":"project"},"EditingAndDeletingSyncUp-01-cover-480p.mov":{"identifier":"EditingAndDeletingSyncUp-01-cover-480p.mov","alt":null,"poster":null,"type":"video","variants":[{"url":"\/videos\/ComposableArchitecture\/EditingAndDeletingSyncUp-01-cover-480p.mov","traits":["1x","light"]}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","title":"A handy debugging tool"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"title":"Adding a new sync-up to the list","kind":"section","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"},"EditingAndDeletingSyncUp-01-code-0009.swift":{"highlights":[{"line":13},{"line":15}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"fileType":"swift","identifier":"EditingAndDeletingSyncUp-01-code-0009.swift"},"EditingAndDeletingSyncUp-02-code-0007.swift":{"syntax":"swift","highlights":[{"line":37},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76}],"fileName":"SyncUpDetail.swift","type":"file","identifier":"EditingAndDeletingSyncUp-02-code-0007.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert:","        return .none","        ","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"fileType":"swift"},"EditingAndDeletingSyncUp-02-code-0013.swift":{"highlights":[{"line":34}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}",""],"fileType":"swift","identifier":"EditingAndDeletingSyncUp-02-code-0013.swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","url":"\/documentation\/composablearchitecture\/presents()","type":"topic","abstract":[{"text":"Wraps a property with ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"text":" and observes it.","type":"text"}],"title":"Presents()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Presents"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","kind":"article","role":"article","title":"Presenting the sync-up form","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","type":"topic","abstract":[]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","title":"Creating the app view","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","title":"Writing your first test","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","abstract":[{"text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","title":"Ending the meeting early"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","abstract":[],"role":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","title":"Persisting sync-ups to disk"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"title":"Reducer()","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}]},"EditingAndDeletingSyncUp-01-code-0005.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-01-code-0005.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"syntax":"swift","highlights":[{"line":10}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"section","role":"pseudoSymbol","title":"Create the SyncUps project","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","type":"section","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}]},"https://swiftpackageindex.com/pointfreeco/swiftui-navigation/1.2.0/documentation/swiftuinavigationcore/alertstate":{"title":"AlertState","url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swiftui-navigation\/1.2.0\/documentation\/swiftuinavigationcore\/alertstate","type":"link","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swiftui-navigation\/1.2.0\/documentation\/swiftuinavigationcore\/alertstate","titleInlineContent":[{"code":"AlertState","type":"codeVoice"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"title":"Asking for speech recognition permission","kind":"section","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"text":" ","type":"text"},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"project","estimatedTime":"20min","type":"topic","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","title":"Navigating to a sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","title":"Testing the edit flow","kind":"section","abstract":[{"text":"The ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"text":" ","type":"text"},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"title":"Form focus: a better approach","kind":"section","role":"pseudoSymbol","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"project","estimatedTime":"10min","type":"topic","url":"\/tutorials\/composablearchitecture\/listsofsyncups","title":"Lists of sync-ups"},"EditingAndDeletingSyncUp-01-code-0011.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-01-code-0011.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"syntax":"swift","highlights":[{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"title":"Testing the sync-up form","kind":"project","role":"project","estimatedTime":"10min","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","url":"\/tutorials\/composablearchitecture\/testingsyncupform","type":"topic"},"EditingAndDeletingSyncUp-03-code-0005.swift":{"highlights":[{"line":54},{"line":55},{"line":56},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .destination:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    \/\/ .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","    \/\/   SyncUpForm()","    \/\/ }","    \/\/ .ifLet(\\.$alert, action: \\.alert)","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-03-code-0005.swift","fileType":"swift"},"EditingAndDeletingSyncUp-03-code-0003.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-03-code-0003.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    \/\/ @Presents var alert: AlertState<Action.Alert>?","    \/\/ @Presents var editSyncUp: SyncUpForm.State?","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case alert(PresentationAction<Alert>)","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .alert(.presented(.confirmButtonTapped)):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .alert(.dismiss):","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","    .ifLet(\\.$alert, action: \\.alert) ","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"syntax":"swift","highlights":[{"line":18},{"line":19},{"line":20}]},"EditingAndDeletingSyncUp-01-code-0002.swift":{"highlights":[{"line":15}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case deleteButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        return .none","      }","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-01-code-0002.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"url":"\/tutorials\/composablearchitecture\/whatissyncups","title":"What is SyncUps?","estimatedTime":"5min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"type":"topic","role":"project"},"EditingAndDeletingSyncUp-03-code-0011.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-03-code-0011.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.destination = nil","        return .none","","      case .deleteButtonTapped:","        state.destination = .alert(.deleteSyncUp)","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.destination?.edit?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.destination = nil","        return .none","","      case .editButtonTapped:","        \/\/ state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        state.destination = .edit(SyncUpForm.State(syncUp: state.syncUp))","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"syntax":"swift","highlights":[{"line":60},{"line":61}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","title":"Testing the sync-up detail","estimatedTime":"10min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"text":"communicates with a parent feature via delegate actions. It’s about time we got some test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"type":"topic","role":"project"},"EditingAndDeletingSyncUp-03-code-0007.swift":{"highlights":[{"line":41}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @Reducer","  enum Destination {","    case alert(AlertState<Alert>)","    case edit(SyncUpForm)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  @ObservableState","  struct State: Equatable {","    @Presents var destination: Destination.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case destination(PresentationAction<Destination.Action>)","    case doneEditingButtonTapped","    case editButtonTapped","  }","","  @Dependency(\\.dismiss) var dismiss","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      \/\/ case .alert(.presented(.confirmButtonTapped)):","      case .destination(.presented(.alert(.confirmButtonTapped))):","        @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","        syncUps.remove(id: state.syncUp.id)","        return .run { _ in await dismiss() }","","      case .destination:","        return .none","","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .delegate:","        return .none","","      case .deleteButtonTapped:","        state.alert = .deleteSyncUp","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","      }","    }","    .ifLet(\\.$destination, action: \\.destination)","  }","}","extension SyncUpDetail.Destination.State: Equatable {}","","extension AlertState where Action == SyncUpDetail.Action.Alert {","  static let deleteSyncUp = Self {","    TextState(\"Delete?\")","  } actions: {","    ButtonState(role: .destructive, action: .confirmButtonTapped) {","      TextState(\"Yes\")","    }","    ButtonState(role: .cancel) {","      TextState(\"Nevermind\")","    }","  } message: {","    TextState(\"Are you sure you want to delete this meeting?\")","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-03-code-0007.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","title":"Adding a speech recognizer","estimatedTime":"10min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"text":"to use Apple’s ","type":"text"},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"section","role":"pseudoSymbol","title":"Persisting data to disk","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","type":"section","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"overridingTitle":"@Shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","title":"PresentationState","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}]},"EditingAndDeletingSyncUp-02-code-0014.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-02-code-0014.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","    .alert($store.scope(state: \\.alert, action: \\.alert))","    .sheet(item: $store.scope(state: \\.editSyncUp, action: \\.editSyncUp)) { editSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: editSyncUpStore)","          .navigationTitle(store.syncUp.title)","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Cancel\") {","                store.send(.cancelEditButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Done\") {","                store.send(.doneEditingButtonTapped)","              }","            }","          }","      }","    }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"syntax":"swift","highlights":[{"line":79}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","title":"Form focus: an approach","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"url":"\/tutorials\/buildingsyncups\/sync-up-detail","title":"Sync-up detail","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","abstract":[],"type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"title":"ifLet(_:action:destination:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q","kind":"symbol","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"section","role":"pseudoSymbol","title":"A basic timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","type":"section","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}]},"EditingAndDeletingSyncUp-02-code-0002.swift":{"highlights":[{"line":8}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var alert: AlertState<Action.Alert>?","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case cancelEditButtonTapped","    case deleteButtonTapped","    case doneEditingButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","    @CasePathable","    enum Alert {","      case confirmButtonTapped","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .cancelEditButtonTapped:","        state.editSyncUp = nil","        return .none","","      case .deleteButtonTapped:","        return .none","","      case .doneEditingButtonTapped:","        guard let editedSyncUp = state.editSyncUp?.syncUp","        else { return .none }","        state.syncUp = editedSyncUp","        state.editSyncUp = nil","        return .none","","      case .editButtonTapped:","        state.editSyncUp = SyncUpForm.State(syncUp: state.syncUp)","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"identifier":"EditingAndDeletingSyncUp-02-code-0002.swift","fileType":"swift"},"EditingAndDeletingSyncUp-01-code-0003.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-01-code-0003.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  @ObservableState","  struct State: Equatable {","    @Presents var editSyncUp: SyncUpForm.State?","    @Shared var syncUp: SyncUp","  }","","  enum Action {","    case deleteButtonTapped","    case editButtonTapped","    case editSyncUp(PresentationAction<SyncUpForm.Action>)","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .deleteButtonTapped:","        return .none","","      case .editButtonTapped:","        return .none","","      case .editSyncUp:","        return .none","      }","    }","    .ifLet(\\.$editSyncUp, action: \\.editSyncUp) {","      SyncUpForm()","    }","  }","}","","struct SyncUpDetailView: View {","  \/\/ ...","}"],"syntax":"swift","highlights":[{"line":26},{"line":27},{"line":28},{"line":31},{"line":32},{"line":33}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"title":"Adding a sync-up","kind":"section","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send":{"navigatorTitle":[{"text":"Send","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A type that can send actions back into the system when used from"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/send","type":"topic","title":"Send","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Send","kind":"identifier"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","title":"SyncUpsList feature","kind":"section","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Creates a persistence key that can read and write to a ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","title":"fileStorage(_:decoder:encoder:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"encoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"title":"Editing the sync-up","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","title":"Controlling dependencies early","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","type":"topic","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","title":"The RecordMeeting feature","kind":"project","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"project"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","abstract":[],"role":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","title":"Lists of sync-ups"},"EditingAndDeletingSyncUp-01-code-0006.swift":{"highlights":[{"line":79},{"line":80},{"line":81},{"line":82},{"line":83}],"fileName":"SyncUpDetail.swift","syntax":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","    .sheet(item: $store.scope(state: \\.editSyncUp, action: \\.editSyncUp)) { editSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: editSyncUpStore)","      }","    }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"identifier":"EditingAndDeletingSyncUp-01-code-0006.swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","kind":"project","role":"project","estimatedTime":"5min","title":"Sync-up detail","url":"\/tutorials\/composablearchitecture\/syncupdetail","type":"topic","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"title":"Editing and deleting a sync-up","kind":"project","role":"project","estimatedTime":"30min","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"url":"\/tutorials\/buildingsyncups\/what-is-syncups-","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","title":"What is SyncUps?","kind":"article","abstract":[],"role":"article"},"EditingAndDeletingSyncUp-03-code-0013.swift":{"fileType":"swift","type":"file","identifier":"EditingAndDeletingSyncUp-03-code-0013.swift","fileName":"SyncUpDetail.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpDetail {","  \/\/ ...","}","","struct SyncUpDetailView: View {","  @Bindable var store: StoreOf<SyncUpDetail>","","  var body: some View {","    Form {","      Section {","        NavigationLink {","        } label: {","          Label(\"Start Meeting\", systemImage: \"timer\")","            .font(.headline)","            .foregroundColor(.accentColor)","        }","        HStack {","          Label(\"Length\", systemImage: \"clock\")","          Spacer()","          Text(store.syncUp.duration.formatted(.units()))","        }","","        HStack {","          Label(\"Theme\", systemImage: \"paintpalette\")","          Spacer()","          Text(store.syncUp.theme.name)","            .padding(4)","            .foregroundColor(store.syncUp.theme.accentColor)","            .background(store.syncUp.theme.mainColor)","            .cornerRadius(4)","        }","      } header: {","        Text(\"Sync-up Info\")","      }","","      if !store.syncUp.meetings.isEmpty {","        Section {","          ForEach(store.syncUp.meetings) { meeting in","            Button {","            } label: {","              HStack {","                Image(systemName: \"calendar\")","                Text(meeting.date, style: .date)","                Text(meeting.date, style: .time)","              }","            }","          }","        } header: {","          Text(\"Past meetings\")","        }","      }","","      Section {","        ForEach(store.syncUp.attendees) { attendee in","          Label(attendee.name, systemImage: \"person\")","        }","      } header: {","        Text(\"Attendees\")","      }","","      Section {","        Button(\"Delete\") {","          store.send(.deleteButtonTapped)","        }","        .foregroundColor(.red)","        .frame(maxWidth: .infinity)","      }","    }","    .toolbar {","      Button(\"Edit\") {","        store.send(.editButtonTapped)","      }","    }","    .navigationTitle(Text(store.syncUp.title))","    .alert($store.scope(state: \\.destination?.alert, action: \\.destination.alert))","    .sheet(","      item: $store.scope(state: \\.destination?.edit, action: \\.destination.edit)","    ) { editSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: editSyncUpStore)","          .navigationTitle(store.syncUp.title)","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Cancel\") {","                store.send(.cancelEditButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Done\") {","                store.send(.doneEditingButtonTapped)","              }","            }","          }","      }","    }","  }","}","","#Preview {","  NavigationStack {","    SyncUpDetailView(","      store: Store(","        initialState: SyncUpDetail.State(","          syncUp: Shared(.mock)","        )","      ) {","        SyncUpDetail()","      }","    )","  }","}"],"syntax":"swift","highlights":[{"line":78},{"line":79},{"line":80},{"line":81},{"line":82}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"url":"\/tutorials\/buildingsyncups\/record-meeting","title":"Record meeting","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","abstract":[],"type":"topic","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"title":"Sync-up form","kind":"project","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"type":"text","text":" "},{"text":"feature to make things a little more interesting.","type":"text"}],"role":"project","url":"\/tutorials\/composablearchitecture\/syncupform","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","estimatedTime":"15min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"title":"Integrating the feature domains together","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","type":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"title":"DismissEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DismissEffect"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","title":"The meeting screen","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"type":"section","role":"pseudoSymbol"}}}